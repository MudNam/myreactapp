name: Deploy React App to GCP

# Testing with new private key
on:
  push:
    branches:
      - main  # Runs on push to 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set Up SSH Keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VM_DEPLOY_KEY: ${{ secrets.VM_DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          
          # Set up GCP VM SSH key
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | sed 's/^[ \t]*//;s/[ \t]*$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Set up GitHub deploy key
          echo "$VM_DEPLOY_KEY" | tr -d '\r' | sed 's/^[ \t]*//;s/[ \t]*$//' > ~/.ssh/github_deploy_key
          chmod 600 ~/.ssh/github_deploy_key
          
          chmod 700 ~/.ssh
        
      - name: Add SSH Host to Known Hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
        
      - name: Test SSH Connection
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          echo "Attempting to connect to $SSH_USERNAME@$SSH_HOST:$SSH_PORT"
          ssh -v -i ~/.ssh/id_rsa -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "echo 'SSH connection successful'"
        
      - name: Deploy to GCP VM
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          VM_DEPLOY_KEY: ${{ secrets.VM_DEPLOY_KEY }}
        run: |
          ssh -i ~/.ssh/id_rsa -p $SSH_PORT $SSH_USERNAME@$SSH_HOST << 'EOF'
            set -e  # Exit immediately if a command exits with a non-zero status
            
            # Debug: Show current user and directory
            echo "Current user: $(whoami)"
            echo "Current directory: $(pwd)"
            
            # Set up GitHub deploy key
            mkdir -p ~/.ssh
            cat << 'GITHUB_KEY' > ~/.ssh/id_ed25519
            $VM_DEPLOY_KEY
            GITHUB_KEY
            chmod 600 ~/.ssh/id_ed25519
            
            # Add GitHub to known hosts
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts
            
            # Configure Git to use the deploy key
            git config --global core.sshCommand "ssh -i ~/.ssh/id_ed25519 -o IdentitiesOnly=yes"
            
            # Navigate to the project directory or create it if it doesn't exist
            mkdir -p ~/react-app
            cd ~/react-app
            
            # Clone repo if not exists, else pull latest changes
            if [ ! -d ".git" ]; then
              git clone git@github.com:MudNam/myreactapp.git .
            else
              git pull origin main
            fi
            
            # Install dependencies
            npm ci  # More reliable than npm install for CI environments
            
            # Build the React app
            npm run build
            
            # Use PM2 to manage the process
            if pm2 list | grep -q "react-app"; then
              pm2 stop react-app
              pm2 delete react-app
            fi
            
            # Serve the app on port 5000
            pm2 start npx --name "react-app" -- serve -s build -l 5000
          EOF